

  UniswapV3Pool
    ✔ constructor initializes immutables (77ms)
    ✔ tick transition cannot run twice if zero for one swap ends at fractional price just below tick (29636ms)
    #initialize
      ✔ fails if already initialized (98ms)
      ✔ fails if starting price is too low
      ✔ fails if starting price is too high
      ✔ can be initialized at MIN_SQRT_RATIO (4192ms)
      ✔ can be initialized at MAX_SQRT_RATIO - 1 (4129ms)
      ✔ sets initial variables (4158ms)
      ✔ initializes the first observations slot (4192ms)
      ✔ emits a Initialized event with the input tick (4088ms)
    #increaseObservationCardinalityNext
      ✔ can only be called after initialize
      ✔ emits an event including both old and new (8222ms)
      ✔ does not emit an event for no op call (8429ms)
      ✔ does not change cardinality next if less than current (12413ms)
      ✔ increases cardinality and cardinality next first time (8332ms)
    #mint
      ✔ fails if not initialized (255ms)
      after initialization
        ✔ protocol fees accumulate as expected during swap (4736ms)
        ✔ positions are protected before protocol fee is turned on (622ms)
        ✔ poke is not allowed on uninitialized position (13509ms)
        failure cases
          ✔ fails if tickLower greater than tickUpper (4275ms)
          ✔ fails if tickLower less than min tick (145ms)
          ✔ fails if tickUpper greater than max tick (285ms)
          ✔ fails if amount exceeds the max (340ms)
          ✔ fails if total amount at tick exceeds the max (717ms)
          ✔ fails if amount is 0 (113ms)
        success cases
          ✔ initial balances
          ✔ initial tick
          above current price
            ✔ transfers token0 only (4267ms)
            ✔ max tick with max leverage (4218ms)
            ✔ works for max tick (4271ms)
            ✔ removing works (4303ms)
            ✔ adds liquidity to liquidityGross (13052ms)
            ✔ removes liquidity from liquidityGross (4404ms)
            ✔ clears tick lower if last position is removed (4283ms)
            ✔ clears tick upper if last position is removed (4280ms)
            ✔ only clears the tick that is not used at all (4564ms)
            ✔ does not write an observation (8521ms)
          including current price
            ✔ price within range: transfers current price of both tokens (4266ms)
            ✔ initializes lower tick (4283ms)
            ✔ initializes upper tick (4245ms)
            ✔ works for min/max tick (4241ms)
            ✔ removing works (8434ms)
            ✔ writes an observation (8408ms)
          below current price
            ✔ transfers token1 only (4245ms)
            ✔ min tick with max leverage (4249ms)
            ✔ works for min tick (4207ms)
            ✔ removing works (4288ms)
            ✔ does not write an observation (4546ms)
    #burn
      1) does not clear the position fee growth snapshot if no more liquidity
      ✔ clears the tick if its the last position using it (8644ms)
      ✔ clears only the lower tick if upper is still used (9320ms)
      ✔ clears only the upper tick if lower is still used (8933ms)
    #observe
      ✔ current tick accumulator increases by tick over time (4130ms)
      ✔ current tick accumulator after single swap (4298ms)
      ✔ current tick accumulator after two swaps (16859ms)
    miscellaneous mint tests
      ✔ mint to the right of the current price (4468ms)
      ✔ mint to the left of the current price (4330ms)
      ✔ mint within the current price (4505ms)
      ✔ cannot remove more than the entire position (4468ms)
      ✔ collect fees within the current price after swap (9495ms)
    post-initialize at medium fee
      k (implicit)
        ✔ returns 0 before initialization
        post initialized
          ✔ returns initial liquidity (39ms)
          ✔ returns in supply in range (4248ms)
          ✔ excludes supply at tick above current tick (146ms)
          ✔ excludes supply at tick below current tick (770ms)
          ✔ updates correctly when exiting range (8711ms)
          ✔ updates correctly when entering range (8636ms)
    limit orders
      ✔ limit selling 0 for 1 at tick 0 thru 1 (17286ms)
      ✔ limit selling 1 for 0 at tick 0 thru -1 (12675ms)
      fee is on
        ✔ limit selling 0 for 1 at tick 0 thru 1 (12683ms)
        ✔ limit selling 1 for 0 at tick 0 thru -1 (12932ms)
    #collect
      ✔ works with multiple LPs (5611ms)
      works across large increases
        ✔ works just before the cap binds (4212ms)
        ✔ works just after the cap binds (4260ms)
        ✔ works well after the cap binds (4292ms)
      works across overflow boundaries
        ✔ token0 (4287ms)
        ✔ token1 (4322ms)
        ✔ token0 and token1 (4497ms)
    #feeProtocol
      ✔ is initially set to 0
      ✔ can be changed by the owner (4178ms)
      ✔ cannot be changed out of bounds (64ms)
      2) cannot be changed by addresses that are not owner
      ✔ position owner gets full fees when protocol fee is off (8409ms)
      ✔ swap fees accumulate as expected (0 for 1) (25052ms)
      ✔ swap fees accumulate as expected (1 for 0) (29314ms)
      ✔ position owner gets partial fees when protocol fee is on (8433ms)
      ✔ fees collected by lp after two swaps should be double one swap (20708ms)
      ✔ fees collected after two swaps with fee turned on in middle are fees from last swap (not confiscatory) (12573ms)
      ✔ fees collected by lp after two swaps with intermediate withdrawal (20985ms)
      #collectProtocol
        ✔ returns 0 if no fees (91ms)
        ✔ can collect fees (12468ms)
        ✔ fees collected can differ between token0 and token1 (12647ms)
    #tickSpacing
      tickSpacing = 12
        post initialize
          ✔ mint can only be called for multiples of 12 (1485ms)
          ✔ mint can be called with multiples of 12 (1048ms)
          ✔ swapping across gaps works in 1 for 0 direction (5260ms)
          ✔ swapping across gaps works in 0 for 1 direction (4842ms)
    #flash
      ✔ fails if not initialized (178ms)
      ✔ fails if no liquidity (196ms)
      after liquidity added
        fee off
          ✔ emits an event (4236ms)
          ✔ transfers the amount0 to the recipient (4193ms)
          ✔ transfers the amount1 to the recipient (4147ms)
          ✔ can flash only token0 (4163ms)
          ✔ can flash only token1 (4396ms)
          ✔ can flash entire token balance (4283ms)
          ✔ no-op if both amounts are 0 (4262ms)
          ✔ fails if flash amount is greater than token balance (89ms)
          ✔ calls the flash callback on the sender with correct fee amounts (4231ms)
          ✔ increases the fee growth by the expected amount (4213ms)
          ✔ fails if original balance not returned in either token (70ms)
          ✔ fails if underpays either token (104ms)
          ✔ allows donating token0 (4230ms)
          ✔ allows donating token1 (4191ms)
          ✔ allows donating token0 and token1 together (4332ms)
        fee on
          ✔ emits an event (4213ms)
          ✔ increases the fee growth by the expected amount (4183ms)
          ✔ allows donating token0 (4147ms)
          ✔ allows donating token1 (4154ms)
          ✔ allows donating token0 and token1 together (4147ms)
    #increaseObservationCardinalityNext
      ✔ cannot be called before initialization
      after initialization
        ✔ oracle starting state after initialization
        ✔ increases observation cardinality next (4186ms)
        3) is no op if target is already exceeded
    #setFeeProtocol
      4) can only be called by factory owner
      ✔ fails if fee is lt 4 or gt 10 (186ms)
      ✔ succeeds for fee of 4 (55ms)
      ✔ succeeds for fee of 10
      ✔ sets protocol fee (4202ms)
      ✔ can change protocol fee (4213ms)
      ✔ can turn off protocol fee (4246ms)
      ✔ emits an event when turned on (4125ms)
      ✔ emits an event when turned off (4529ms)
      ✔ emits an event when changed (4295ms)
      ✔ emits an event when unchanged (4214ms)
    #lock
      ✔ cannot reenter from swap callback (4241ms)
    #snapshotCumulativesInside
      ✔ throws if ticks are in reverse order (81ms)
      ✔ throws if ticks are the same
      ✔ throws if tick lower is too low
      ✔ throws if tick upper is too high
      ✔ throws if tick lower is not initialized
      ✔ throws if tick upper is not initialized (67ms)
      ✔ is zero immediately after initialize (41ms)
      5) increases by expected amount when time elapses in the range
      ✔ does not account for time increase above range (4579ms)
      ✔ does not account for time increase below range (4753ms)
      ✔ time increase below range is not counted (4577ms)
      ✔ time increase above range is not counted (4732ms)
      ✔ positions minted after time spent (4635ms)
      ✔ overlapping liquidity is aggregated (9564ms)
      6) relative behavior of snapshots
    fees overflow scenarios
      ✔ up to max uint 128 (9096ms)
      ✔ overflow max uint 128 (1062ms)
      ✔ overflow max uint 128 after poke burns fees owed to 0 (5689ms)
      7) two positions at the same snapshot
      8) two positions 1 wei of fees apart overflows exactly once
    swap underpayment tests
      9) underpay zero for one and exact in
      10) pay in the wrong token zero for one and exact in
      ✔ overpay zero for one and exact in (75ms)
      ✔ underpay zero for one and exact out (278ms)
      11) pay in the wrong token zero for one and exact out
      ✔ overpay zero for one and exact out (99ms)
      12) underpay one for zero and exact in
      13) pay in the wrong token one for zero and exact in
      ✔ overpay one for zero and exact in (81ms)
      14) underpay one for zero and exact out
      15) pay in the wrong token one for zero and exact out
      ✔ overpay one for zero and exact out (172ms)


  151 passing (52m)
  15 failing

  1) UniswapV3Pool
       #burn
         does not clear the position fee growth snapshot if no more liquidity:
     failed to estimate gas: CallWithGas failed: call raw get actor: resolution lookup failed (f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni): resolve address f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni: actor not found
  ProviderError: HttpProviderError
      at HttpProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/http.ts:83:19)
      at LocalAccountsProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/accounts.ts:187:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)
      at async EthersProviderWrapper.send (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)

  2) UniswapV3Pool
       #feeProtocol
         cannot be changed by addresses that are not owner:
     AssertionError: Expected transaction to be reverted, but other exception was thrown: ProviderError: failed to estimate gas: CallWithGas failed: call raw get actor: resolution lookup failed (f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni): resolve address f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni: actor not found
  

  3) UniswapV3Pool
       #increaseObservationCardinalityNext
         after initialization
           is no op if target is already exceeded:

      AssertionError: expected 1 to equal 5
      + expected - actual

      -1
      +5
      
      at Context.<anonymous> (test/UniswapV3Pool.spec.ts:1603:47)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  4) UniswapV3Pool
       #setFeeProtocol
         can only be called by factory owner:
     AssertionError: Expected transaction to be reverted, but other exception was thrown: ProviderError: failed to estimate gas: CallWithGas failed: call raw get actor: resolution lookup failed (f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni): resolve address f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni: actor not found
  

  5) UniswapV3Pool
       #snapshotCumulativesInside
         increases by expected amount when time elapses in the range:

      AssertionError: Expected "0" to be equal 170141183460469231731687303715884105728
      + expected - actual

       {
      -  "_hex": "0x80000000000000000000000000000000"
      +  "_hex": "0x00"
         "_isBigNumber": true
       }
      
      at Context.<anonymous> (test/UniswapV3Pool.spec.ts:1713:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  6) UniswapV3Pool
       #snapshotCumulativesInside
         relative behavior of snapshots:
     Error: missing revert data in call exception; Transaction reverted without a reason string [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (data="0x", transaction={"from":"0xF113C0c7741E1351A6263c7e8cF693494BCf58F7","to":"0x551bc8fc01B7ee707a725e44e1d1E64e81A835F3","data":"0xa38807f2fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc4","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/http.ts:83:19)\n    at LocalAccountsProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/accounts.ts:187:34)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async EthersProviderWrapper.send (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":1,"_isProviderError":true}, code=CALL_EXCEPTION, version=providers/5.7.2)
      at Logger.makeError (node_modules/@ethersproject/providers/node_modules/@ethersproject/logger/src.ts/index.ts:269:28)
      at Logger.throwError (node_modules/@ethersproject/providers/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
      at checkError (node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:66:16)
      at EthersProviderWrapper.<anonymous> (node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
      at step (node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
      at Object.throw (node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)
      at rejected (node_modules/@ethersproject/providers/lib/json-rpc-provider.js:21:65)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  7) UniswapV3Pool
       fees overflow scenarios
         two positions at the same snapshot:
     failed to estimate gas: CallWithGas failed: call raw get actor: resolution lookup failed (f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni): resolve address f410ffyiqh6iw5kc5zi34zufspvzggylrwrulmrrp3ni: actor not found
  ProviderError: HttpProviderError
      at HttpProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/http.ts:83:19)
      at LocalAccountsProvider.request (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/hardhat/src/internal/core/providers/accounts.ts:187:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)
      at async EthersProviderWrapper.send (/Users/alex/Documents/Work/mob/filecoin/uniswap-v3-core/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)

  8) UniswapV3Pool
       fees overflow scenarios
         two positions 1 wei of fees apart overflows exactly once:
     AssertionError: Expected "340282366920938463463374607431768211456" to be equal 0
      at Context.<anonymous> (test/UniswapV3Pool.spec.ts:1911:39)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  9) UniswapV3Pool
       swap underpayment tests
         underpay zero for one and exact in:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03118 (method 3844450837) -- contract reverted (33)
01: f03117 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  10) UniswapV3Pool
       swap underpayment tests
         pay in the wrong token zero for one and exact in:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03127 (method 3844450837) -- contract reverted (33)
01: f03126 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  11) UniswapV3Pool
       swap underpayment tests
         pay in the wrong token zero for one and exact out:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03154 (method 3844450837) -- contract reverted (33)
01: f03153 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  12) UniswapV3Pool
       swap underpayment tests
         underpay one for zero and exact in:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03172 (method 3844450837) -- contract reverted (33)
01: f03171 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  13) UniswapV3Pool
       swap underpayment tests
         pay in the wrong token one for zero and exact in:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03181 (method 3844450837) -- contract reverted (33)
01: f03180 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  14) UniswapV3Pool
       swap underpayment tests
         underpay one for zero and exact out:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03199 (method 3844450837) -- contract reverted (33)
01: f03198 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  

  15) UniswapV3Pool
       swap underpayment tests
         pay in the wrong token one for zero and exact out:
     AssertionError: Expected transaction to be reverted with IIA, but other exception was thrown: ProviderError: failed to estimate gas: message execution failed: exit 33, reason: message failed with backtrace:
00: f03208 (method 3844450837) -- contract reverted (33)
01: f03207 (method 3844450837) -- contract reverted (33)
 (RetCode=33)
  



